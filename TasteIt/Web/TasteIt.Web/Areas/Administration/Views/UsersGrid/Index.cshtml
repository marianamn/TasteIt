@using Kendo.Mvc.UI
@(Html.Kendo().Grid<TasteIt.Data.Models.User>()
      .Name("grid")
      .Columns(columns =>
      {
        columns.Bound(c => c.FirstName);
        columns.Bound(c => c.LastName);
        columns.Bound(c => c.ImageURL);
        columns.Bound(c => c.Email);
        columns.Bound(c => c.EmailConfirmed);
        columns.Bound(c => c.PasswordHash);
        columns.Bound(c => c.SecurityStamp);
        columns.Bound(c => c.PhoneNumber);
        columns.Bound(c => c.PhoneNumberConfirmed);
        columns.Bound(c => c.TwoFactorEnabled);
        columns.Bound(c => c.LockoutEndDateUtc);
        columns.Bound(c => c.LockoutEnabled);
        columns.Bound(c => c.AccessFailedCount);
        columns.Bound(c => c.UserName);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
      })
      .ToolBar(toolbar => {
            toolbar.Create();
      })
      .ColumnMenu()
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Navigatable()
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable()
      .Events(events => {
            events.Cancel("onCancel");
            events.Remove("onRemove");
            events.SaveChanges("onSaveChanges");
            events.Save("onSave");
            events.Change("onChange");
            events.ColumnReorder("onColumnReorder");
            events.ColumnHide("onColumnHide");
            events.ColumnUnlock("onColumnUnlock");
            events.DetailCollapse("onDetailCollapse");
            events.Edit("onEdit");
            events.DataBound("onDataBound");
            events.DataBinding("onDataBinding");
            events.DetailExpand("onDetailExpand");
      })
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Users_Read", "UsersGrid"))
          .Create(create => create.Action("Users_Create", "UsersGrid"))
          .Update(update => update.Action("Users_Update", "UsersGrid"))
          .Destroy(destroy => destroy.Action("Users_Destroy", "UsersGrid"))
      )
)

<script>

    function onCancel(e){
        //Implement the event handler for Cancel
    }

    function onRemove(e){
        //Implement the event handler for Remove
    }

    function onSaveChanges(e){
        //Implement the event handler for SaveChanges
    }

    function onSave(e){
        //Implement the event handler for Save
    }

    function onChange(e){
        //Implement the event handler for Change
    }

    function onColumnReorder(e){
        //Implement the event handler for ColumnReorder
    }

    function onColumnHide(e){
        //Implement the event handler for ColumnHide
    }

    function onColumnUnlock(e){
        //Implement the event handler for ColumnUnlock
    }

    function onDetailCollapse(e){
        //Implement the event handler for DetailCollapse
    }

    function onEdit(e){
        //Implement the event handler for Edit
    }

    function onDataBound(e){
        //Implement the event handler for DataBound
    }

    function onDataBinding(e){
        //Implement the event handler for DataBinding
    }

    function onDetailExpand(e){
        //Implement the event handler for DetailExpand
    }

</script>
